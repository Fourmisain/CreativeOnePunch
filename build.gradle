plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT' apply false
	id 'glue'
	id 'maven-publish'
}

glue {
	// subproject names in the order they'll be merged
	targets = ['legacy', 'main', 'glue']
	// output path defaults to build/libs/archives_base_name-mod_version.jar
	outputName = "${project.archives_base_name}-${project.mod_version}-universal"
}

// TODO this won't show up in IntelliJ's Gradle tool window, but applying the java plugin annoyingly creates an empty jar
tasks.register('build') {
	finalizedBy 'glue'
}

tasks.register('clean', Delete) {
	delete Glue.of(rootProject).outputFile()
}

subprojects {
	apply plugin: 'fabric-loom'

	repositories {
		maven { url = 'https://maven.shedaniel.me/' }
		maven { url = 'https://maven.terraformersmc.com/' }
	}

	dependencies {
		minecraft "com.mojang:minecraft:${project.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
		modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	}

	archivesBaseName = rootProject.archives_base_name
	version = rootProject.mod_version
	group = rootProject.maven_group

	processResources {
		inputs.property 'version', project.version

		filesMatching('fabric.mod.json') {
			expand 'version': project.version
		}
	}

	java {
		withSourcesJar()
	}

	jar {
		from('../LICENSE') {
			rename { "${it}_${archivesBaseName}"}
		}
	}
}

//publishing {
//	publications {
//		mavenJava(MavenPublication) {
//			from components.java
//		}
//	}
//
//	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
//	repositories {
//		// Add repositories to publish to here.
//		// mavenLocal()
//	}
//}